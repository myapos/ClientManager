// Generated by CoffeeScript 1.9.2
(function() {
  var Format, path, stackReg, stackReg2;

  path = require('path');

  stackReg = /at\s+(.*)\s+\((.*):(\d*):(\d*)\)/i;

  stackReg2 = /at\s+()(.*):(\d*):(\d*)/i;

  Format = (function() {
    function Format() {}

    Format.prototype.init = function(config) {};

    Format.prototype.getTime = function() {
      var time;
      time = new Date();
      //return ("Send date: "+ time.getDate()+ ":"+time.getHours()) + ":" + (time.getMinutes()) + ":" + (time.getSeconds()) + ":" + (time.getMilliseconds());
      return ("Send date: "+ time.getDate() + "-"+(time.getMonth()+1)+"-"+time.getFullYear() +" Time: "+ time.getHours()) + ":" + (time.getMinutes()) + ":" + (time.getSeconds()) + ":" + (time.getMilliseconds());
    
    };

    Format.prototype.getInfoStack = function() {
      var data, s, stackInfo;
      s = (new Error()).stack.split('\n')[5];
      stackInfo = stackReg.exec(s) || stackReg2.exec(s);
      data = {};
      if (stackInfo && (stackInfo.length === 5)) {
        data.method = stackInfo[1];
        data.path = stackInfo[2];
        data.line = stackInfo[3];
        data.pos = stackInfo[4];
        data.file = path.basename(data.path);
      }
      return data.file + ":" + data.line;
    };

    Format.prototype.f = function(content) {
      var contentType, str;
      contentType = typeof content;
      switch (contentType) {
        case "string":
          str = content;
          break;
        case "function":
          str = content.toString();
          break;
        case "object":
          str = JSON.stringify(content);
          break;
        case "undefined":
          str = "undefined";
          break;
        default:
          str = content;
      }
      return (this.getTime()) + " [" + (this.getInfoStack()) + "]>>" + str;
    };

    return Format;

  })();

  module.exports = new Format();

}).call(this);
