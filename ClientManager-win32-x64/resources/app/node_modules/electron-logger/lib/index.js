// Generated by CoffeeScript 1.9.2
(function() {
  var COLORS, LEVELS, STATUS, _logger, _status, _switch, colors, format, fs, output, path, setting;

  fs = require('fs');

  path = require('path');

  colors = require('colors/safe');

  setting = require('./settings');

  output = require('./output');

  output.setDest(setting.dest);

  format = require('./format');

  format.init();

  LEVELS = setting.LEVELS;

  COLORS = setting.COLORS;

  STATUS = setting.STATUS;

  _status = 1;

  _switch = function(status) {
    if (status) {
      return _status = status;
    } else {
      return _status ^= 1;
    }
  };

  _logger = function(level, content) {
    var levelColor;
    if (level == null) {
      level = 1;
    }
    if (_status) {
      levelColor = COLORS[level];
      return output.log(format.f(content), levelColor);
    }
  };

  module.exports = {
    debug: function(content) {
      if (LEVELS[setting.level] >= LEVELS.DEBUG) {
        return _logger(LEVELS.DEBUG, content);
      }
    },
    info: function(content) {
      if (LEVELS[setting.level] >= LEVELS.INFO) {
        return _logger(LEVELS.INFO, content);
      }
    },
    error: function(content) {
      return _logger(LEVELS.ERROR, content);
    },
    setOutput: function(config) {
      return output.setDest(config);
    },
    setLevel: function(level) {
      if (level == null) {
        level = "INFO";
      }
      if (typeof level === 'number') {
        return setting.setLevelByNumber(level);
      } else if (typeof level === 'string') {
        return setting.setLevelByString(level);
      }
    },
    getLevel: function() {
      this.debug(setting.level);
      return setting.level;
    },
    close: function() {
      return _switch(0);
    },
    pause: function() {
      return this.close();
    },
    open: function() {
      return _switch(1);
    }
  };

}).call(this);
